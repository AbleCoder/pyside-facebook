#!/usr/bin/env python
#
# This file is part of PySide-Facebook.
# Copyright (c) 2012 Brandon Orther. All rights reserved.
#
# The full license is available in the LICENSE file that was distributed with
# this source code.
#
# Author: Brandon Orther <an.able.coder@gmail.com>


"""
A general purpose PySide library to interact with facebook's API.
"""

from PySide.QtCore   import QUrl
from PySide.QtCore   import Signal
from PySide.QtWebKit import QWebView

# -----------------------------------------------------------------------------
# CONSTANTS
# -----------------------------------------------------------------------------

DEFAULT_REDIRECT_URI = "http://www.facebook.com/connect/login_success.html"
OAUTH_URL = "https://graph.facebook.com/oauth/authorize"


# -----------------------------------------------------------------------------
# CLASSES
# -----------------------------------------------------------------------------

class FBAuthDialog(QWebView):
    """
    A QWebView extended to load Facebook's OAuth Dialog allowing a user to
    login and grant permissions to your facebook app and return the
    user's token.
    """

    # -------------------------------------------------------------------------
    # SIGNALS
    # -------------------------------------------------------------------------

    """
    Emitted when a user authenticates, authorizes the requested permissions
    AND the `response_type` was set to: code

    @param (str) oauth_code - OAuth code generated by facebook.
    @param (str) state      - The state value originally set in request.
    """
    signal_permsGrantedQAuthCode = Signal(str, str)

    # -------------------------------------------------------------------------

    """
    Emitted when a user authenticates, authorizes the requested permissions
    AND the `response_type` was set to: token

    @param (str) access_token - Authenticated user's facebook access token.
    @param (int) expires in   - Number of seconds until token expires.
    @param (str) state        - The state value originally set in request.
    """
    signal_permsGrantedAccessToken = Signal(str, int, str)

    # -------------------------------------------------------------------------

    """
    Emitted when a the requested permissions are NOT authorized by the user.

    @param (str) error       - Error code (example: access_denied)
    @param (str) reason      - Reason code (example: user_denied)
    @param (str) description - A string explaining the error.
    @param (str) state       - The state value originally set in request.
    """
    signal_permsDeclined = Signal(str, str, str, str)

    # -------------------------------------------------------------------------
    # METHODS
    # -------------------------------------------------------------------------

    def __init__(self, parent):
        super(FBAuthDialog, self).__init__(parent)

    def oauth_url(client_id, redirect_uri=DEFAULT_REDIRECT_URI, scope=None,
            state=None, response_type="token", display="page"):
        """
        Return encoded OAuth URL.

        @return (QByteArray)
        """

        url = QUrl(FBAuthDialog.OAUTH_URL)
        print "~~>>", url

        url.addQueryItem(u"client_id", unicode(client_id))
        url.addQueryItem(u"redirect_uri", unicode(redirect_uri))
        url.addQueryItem(u"response_type", unicode(response_type))
        url.addQueryItem(u"display", unicode(display))

        if scope:
            url.addQueryItem("scope", scope)

        if state:
            url.addQueryItem("state", state)

        return url.toEncoded()
